
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kids-pixel-pals-postgres
    environment:
      POSTGRES_DB: kids_pixel_pals
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kids-pixel-pals-network

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: kids-pixel-pals-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kids-pixel-pals-network

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kids-pixel-pals-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/kids_pixel_pals
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "poetry install && 
             alembic upgrade head && 
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - kids-pixel-pals-network

volumes:
  postgres_data:
  redis_data:

networks:
  kids-pixel-pals-network:
    driver: bridge